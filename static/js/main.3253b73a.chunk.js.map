{"version":3,"sources":["components/Activity.tsx","components/UI/Video.tsx","components/UI/GolgiBody.tsx","components/UI/Cytosol.tsx","components/UI/Nucleus.tsx","components/UI/Mitochondrion.tsx","components/UI/Lysosome.tsx","components/UI/Location.tsx","MainDisplay.tsx","assets/nucleus.mp4","assets/mitochondrion.mp4","assets/golgi_body.mp4","assets/lysosome.mp4","assets/cytosol.mp4","components/LocationComponent.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Activity","props","setChecked","i","target","answers","state","playerZone","player","zone","answer","get","undefined","isChecked","checked","setState","blur","Map","Questions","forEach","question","set","this","answerList","Array","from","values","map","val","gamePlayers","partner","inAccordance","console","log","Button","variant","style","fontSize","width","marginBottom","disabled","marginTop","textAlign","Q","ToggleButtonGroup","type","alignItems","animation","j","ToggleButton","value","length","pointerEvents","marginRight","name","id","onChange","e","currentTarget","join","React","Component","Video","muted","autoPlay","playsInline","loop","src","height","display","boxShadow","borderRadius","GolgiBody","Carousel","indicators","touch","interval","Item","marginLeft","Cytosol","Mitochondrion","Lysosome","getOrganelleCarousel","Nucleus","Error","Mode","Location","className","Figure","Spinner","size","Math","round","x","y","theta","lastFetched","organelles","graphic","nucleusGraphic","mitochondrionGraphic","golgiBodyGraphic","lysosomeGraphic","undefinedGraphic","LocationComponent","MainDisplay","startQuiz","showModal","startedQuiz","keepExploring","key","mode","Explore","desiredKey","paddingTop","color","fontFamily","padding","Tabs","activeKey","onSelect","k","setKey","Tab","eventKey","title","Modal","show","backdrop","keyboard","Header","closeButton","Title","Body","Footer","onClick","getQuery","query","result","URLSearchParams","window","location","search","App","intervalId","fetchGamePlayer","fetch","then","res","json","pose","content","date","Date","toLocaleTimeString","JSON","stringify","error","fetchPose","playerName","gamePlayer","partnerName","setInterval","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3253b73a.chunk.js","sourcesContent":["import React from 'react';\nimport {Form, Badge, Button, ListGroup, ToggleButton, ToggleButtonGroup} from 'react-bootstrap';\nimport Questions from '../assets/question_sheet.json';\nimport { GamePlayer } from '../App';\n\ninterface ActivityProps {\n  player: GamePlayer\n  partner: GamePlayer\n}\n\ninterface Answer {\n  isChecked: boolean,\n  zone: string\n}\n\ninterface ActivityState {\n  answers: Map<number, Answer>\n}\n\nclass Activity extends React.Component<ActivityProps, ActivityState> {\n\n    constructor(props : ActivityProps) {\n      super(props);\n      let answers = new Map<number, Answer>();\n      Questions.forEach((question, i) => {\n        let response = {isChecked: false, zone: \"?\"} as Answer;\n        answers.set(i, response);\n      })\n      this.state = {\n        answers: answers\n      };\n    }\n\n    componentDidMount() {\n    }\n\n    setChecked = (i: number, target: HTMLInputElement) => {\n      let answers = this.state.answers;\n      let playerZone = this.props.player.zone;\n      let answer = answers.get(i);\n      if (answer === undefined) {\n        return;\n      }\n      answer.isChecked = target.checked;\n      answer.zone = target.checked ? playerZone : \"?\";\n      this.setState({\n        answers: answers\n      });\n      target.blur();\n    }\n\n    render() {\n      let answers = this.state.answers;\n      let answerList = Array.from(answers.values()).map(val => val.zone);\n      let gamePlayers = [this.props.player, this.props.partner];\n      let inAccordance = this.props.player.zone === this.props.partner.zone;\n      console.log(Questions);\n      return  <div>\n                <Button variant=\"dark\" style={{fontSize: \"1.4rem\", width: \"100%\", marginBottom: \"20px\"}} disabled>\n                  For each question, place your robot to the organelle on the map\n                    that you consider to be the correct answer.\n                </Button>            \n                <div></div>    \n                {\n                  Questions.map((question, i) => \n                    <div key={i} style={{marginTop: \"10px\"}}>\n                      <Button variant=\"dark mt-2\" style={{ fontSize: \"1.2rem\", width: \"100%\", textAlign: \"left\", marginBottom: \"15px\", marginTop: \"15px\"}} disabled>\n                      {i+1}. {question.Q}\n                      </Button>\n                        <ToggleButtonGroup type=\"checkbox\" \n                          style={{alignItems: \"center\",  \n                                  animation: answers.get(i)?.isChecked ? \"\" : \"pulse 1s infinite\",\n                                  width: \"80%\"}}>\n                          {\n                            gamePlayers.map((player: GamePlayer, j) =>\n                            <ToggleButton value={Questions.length + j} \n                              style={{pointerEvents: \"none\", marginRight: \"2px\"}}\n                              variant={answers.get(i)?.isChecked ? \"primary\" : inAccordance ? \"info\" : \"light\"}>\n                              {\n                                answers.get(i)?.isChecked ?\n                                `${player.name}: ${answers.get(i)?.zone}`\n                                : `${player.name}: ${player.zone}`\n                              }\n                            </ToggleButton>)\n                          }\n                          <ToggleButton\n                            id=\"toggle-check\"\n                            checked={answers.get(i)?.isChecked}\n                            variant={answers.get(i)?.isChecked ? \"primary\" : inAccordance ? \"info\" : \"danger\"}\n                            value={i}\n                            style={{pointerEvents: (answers.get(i)?.isChecked ? \"auto\" : inAccordance ? \"auto\" : \"none\")}}\n                            onChange={(e) => this.setChecked(i, e.currentTarget)}>\n                          { \n                            answers.get(i)?.isChecked ? \n                            \"Unlock\" : \n                            inAccordance ? \"Lock in\" : \"Settle on an answer\"\n                          }\n                        </ToggleButton>\n                        </ToggleButtonGroup>\n                    </div>\n                  )\n                }\n                <Button variant=\"dark\" style={{fontSize: \"1rem\", width: \"100%\", marginTop: \"20px\"}} disabled>\n                Your answers: [{answerList.join(\", \")}]\n                </Button>\n                <Button\n                  style={{marginTop: \"20px\", width: \"50%\"}}\n                  variant=\"success\">\n                    Submit\n                </Button>   \n              </div>\n    }\n  }\n\n\n\nexport default Activity;","import React from 'react';\n\nfunction Video(props: any) {\n    return <video\n                muted\n                autoPlay\n                playsInline\n                loop\n                src={props.src}\n                height={\"100%\"}\n                width={\"100%\"}\n                style={{\n                    display: \"block\",\n                    boxShadow: \"0px 1px 17px 0px #ffffff38\",\n                    borderRadius: \"5px\"}}>\n            </video>\n}\n\nexport default Video;","import React from 'react';\nimport { Figure, Spinner, Badge, Alert, Button } from 'react-bootstrap';\nimport pastel2 from '../assets/pastel2.png';\nimport Video from './Video';\nimport Carousel from 'react-bootstrap/Carousel'\nimport { FunctionComponent } from 'react'; // importing FunctionComponent\nimport ReactMarkdown from 'react-markdown'\n\ninterface GolgiBodyProps {\n}\n\nconst GolgiBody: FunctionComponent<GolgiBodyProps> = (props: GolgiBodyProps): any => {\n    /* function body */\n    return <Carousel indicators={false} touch={false} interval={null}>\n    <Carousel.Item style={{width: \"70%\", marginLeft: \"15%\", textAlign: \"center\"}}>\n        <ReactMarkdown>\n        ## The packaging warehouse of the cell.\n        </ReactMarkdown>\n        <ReactMarkdown>\n        **Did you know?**\n        </ReactMarkdown>\n        <ReactMarkdown>\n        The golgi body is named after its discoverer, Camillo Golgi. It appears as a set of stacked membranes!\n        </ReactMarkdown>\n        <ReactMarkdown>\n        **Read ahead** to find out what this mysterious organelle does.\n        </ReactMarkdown>\n    </Carousel.Item>\n    <Carousel.Item style={{width: \"70%\", marginLeft: \"15%\", textAlign: \"center\"}}>\n        <ReactMarkdown>\n        **What does it do?**\n        </ReactMarkdown>\n        <ReactMarkdown>\n        The golgi body helps process and package ***proteins*** and ***lipid*** (fat) molecules.\n        </ReactMarkdown>\n        <ReactMarkdown>\n        In particular, it readies proteins for export, to be jettisoned outside of the cell.\n        </ReactMarkdown>\n    </Carousel.Item>\n    </Carousel>\n};\n\nexport default GolgiBody;","import React from 'react';\nimport { Figure, Spinner, Badge, Alert, Button } from 'react-bootstrap';\nimport pastel2 from '../assets/pastel2.png';\nimport Video from './Video';\nimport Carousel from 'react-bootstrap/Carousel'\nimport { FunctionComponent } from 'react'; // importing FunctionComponent\nimport ReactMarkdown from 'react-markdown'\n\ninterface CytosolProps {\n}\n\nconst Cytosol: FunctionComponent<CytosolProps> = (props: CytosolProps): any => {\n    /* function body */\n    return <Carousel indicators={false} touch={false} interval={null}>\n    <Carousel.Item style={{width: \"70%\", marginLeft: \"15%\", textAlign: \"center\"}}>\n        <ReactMarkdown>\n        ## The liquid medium contained within a cell.\n        </ReactMarkdown>\n        <ReactMarkdown>\n        The main component of cytosol is water.\n        </ReactMarkdown>\n        <ReactMarkdown>\n        Suspended within the cytosol are various ***organelles*** - move your robot to these to learn more.\n        </ReactMarkdown>\n    </Carousel.Item>\n    <Carousel.Item style={{width: \"70%\", marginLeft: \"15%\", textAlign: \"center\"}}>\n        <ReactMarkdown>\n        **Did you know?**\n        </ReactMarkdown>\n        <ReactMarkdown>\n        That's not all though! The cytosol also contains dissolved ions, small molecules, and proteins.\n        </ReactMarkdown>\n    </Carousel.Item>\n</Carousel>\n};\n\nexport default Cytosol;","import React from 'react';\nimport { Figure, Spinner, Badge, Alert, Button } from 'react-bootstrap';\nimport pastel2 from '../assets/pastel2.png';\nimport Video from './Video';\nimport Carousel from 'react-bootstrap/Carousel'\nimport { FunctionComponent } from 'react'; // importing FunctionComponent\nimport ReactMarkdown from 'react-markdown'\n\ninterface CytosolProps {\n}\n\nconst Cytosol: FunctionComponent<CytosolProps> = (props: CytosolProps): any => {\n    /* function body */\n    return <Carousel indicators={false} touch={false} interval={null}>\n        <Carousel.Item style={{width: \"70%\", marginLeft: \"15%\", textAlign: \"center\"}}>\n            <ReactMarkdown>\n            ## The control centre of the cell.\n            </ReactMarkdown>\n            <ReactMarkdown>\n            The nucleus contains most of the cell's genetic material inside DNA structures known as ***chromosomes***.\n            </ReactMarkdown>\n            <ReactMarkdown>\n            Inside the nucleus, DNA is transcribed into ***messenger RNA*** which leaves the nucleus through\n            small pores.\n            </ReactMarkdown>\n        </Carousel.Item>\n        <Carousel.Item style={{width: \"70%\", marginLeft: \"15%\", textAlign: \"center\"}}>\n            <ReactMarkdown>\n            The messenger RNA is ***translated*** elsewhere into proteins, which have important\n            roles to play - for instance, controlling your hair colour!\n            </ReactMarkdown>\n            <ReactMarkdown>\n            The nucleus is also responsible for reproduction (AKA ***cell division***).\n            </ReactMarkdown>\n        </Carousel.Item>\n    </Carousel>\n};\n\nexport default Cytosol;","import React from 'react';\nimport { Figure, Spinner, Badge, Alert, Button } from 'react-bootstrap';\nimport pastel2 from '../assets/pastel2.png';\nimport Video from './Video';\nimport Carousel from 'react-bootstrap/Carousel'\nimport { FunctionComponent } from 'react'; // importing FunctionComponent\nimport ReactMarkdown from 'react-markdown'\n\ninterface MitochondrionProps {\n}\n\nconst Mitochondrion: FunctionComponent<MitochondrionProps> = (props: MitochondrionProps): any => {\n    /* function body */\n    return <Carousel indicators={false} touch={false} interval={null}>\n            <Carousel.Item style={{width: \"70%\", marginLeft: \"15%\", textAlign: \"center\"}}>\n                <ReactMarkdown>\n                ## The powerhouse of the cell.\n                </ReactMarkdown>\n                <ReactMarkdown>\n                Mitochondria generate the **chemical energy** to power the cell's biochemical reactions.\n                </ReactMarkdown>\n                <ReactMarkdown>\n                This energy is stored in a small molecule called ***ATP: adenosine triphosphate***.\n                </ReactMarkdown>\n            </Carousel.Item>\n            <Carousel.Item style={{width: \"70%\", marginLeft: \"15%\", textAlign: \"center\"}}>\n                <ReactMarkdown>\n                **Did you know?**\n                </ReactMarkdown>\n                <ReactMarkdown>\n                Mitochondria contain their own DNA, in the form of small, circular chromosomes. These are only inherited from the mother!\n                </ReactMarkdown>\n            </Carousel.Item>\n        </Carousel>\n};\n\nexport default Mitochondrion;","import React from 'react';\nimport { Figure, Spinner, Badge, Alert, Button } from 'react-bootstrap';\nimport pastel2 from '../assets/pastel2.png';\nimport Video from './Video';\nimport Carousel from 'react-bootstrap/Carousel'\nimport { FunctionComponent } from 'react'; // importing FunctionComponent\nimport ReactMarkdown from 'react-markdown'\n\ninterface LysosomeProps {\n}\n\nconst Lysosome: FunctionComponent<LysosomeProps> = (props: LysosomeProps): any => {\n    /* function body */\n    return <Carousel indicators={false} touch={false} interval={null}>\n        <Carousel.Item style={{width: \"70%\", marginLeft: \"15%\", textAlign: \"center\"}}>\n            <ReactMarkdown>\n            ## The lord of destruction of the cell.\n            </ReactMarkdown>\n            <ReactMarkdown>\n            Lysosomes contain ***digestive enzymes*** which break down excess or worn-out cell parts.\n            </ReactMarkdown>\n            <ReactMarkdown>\n            They are also involved in a rather morbid process called ***apoptosis***. Read ahead to find out what this is.\n            </ReactMarkdown>\n        </Carousel.Item>\n        <Carousel.Item style={{width: \"70%\", marginLeft: \"15%\", textAlign: \"center\"}}>\n            <ReactMarkdown>\n            ***Apoptosis***: Programmed cell death.\n            </ReactMarkdown>\n            <ReactMarkdown>\n            If the cell is damaged beyond repair, lysosomes can help it self-destruct in a process called apoptosis, or programmed cell death.\n            </ReactMarkdown>\n        </Carousel.Item>\n    </Carousel>\n};\n\nexport default Lysosome;","import React from 'react';\nimport { Figure, Spinner, Badge, Alert, Button } from 'react-bootstrap';\nimport pastel2 from '../assets/pastel2.png';\nimport Video from './Video';\nimport { FunctionComponent } from 'react'; // importing FunctionComponent\nimport ReactMarkdown from 'react-markdown'\nimport GolgiBody from './GolgiBody';\nimport Cytosol from './Cytosol';\nimport Nucleus from './Nucleus';\nimport Mitochondrion from './Mitochondrion';\nimport Lysosome from './Lysosome';\n\ninterface LocationProps {\n    x: number,\n    y: number,\n    theta: number,\n    zone: string,\n    src: string,\n    lastFetched: string | null,\n    name: string\n}\n\nfunction getOrganelleCarousel(zone: string) {\n    switch (zone) {\n        case \"golgiBody\":\n            return <GolgiBody/>;\n        case \"nucleus\":\n            return <Nucleus/>;\n        case \"lysosome\":\n            return <Lysosome/>;\n        case \"mitochondrion\":\n            return <Mitochondrion/>;\n        case \"cytosol\":\n        case \"undefined\":\n            return <Cytosol/>;\n        default:\n            throw new Error(\"Undefined behaviour for zone: \" + zone);\n    }\n}\n\nconst Location: FunctionComponent<LocationProps> = (props: LocationProps): any => {\n    /* function body */\n    return <div className=\"row\">\n        <div className=\"col-lg\">\n            <Figure style={{marginBottom: \"-3px\", marginTop: \"-5px\"}}>\n                <Video src={props.src}></Video>\n            </Figure>\n            <Button variant=\"dark mt-2\" style={{ fontSize: \"1rem\", width: \"100%\", textAlign: \"left\" }} disabled>\n                {getOrganelleCarousel(props.zone)}\n            </Button>\n            <Button variant=\"dark mt-2\" style={{ fontSize: \"1rem\", width: \"100%\" }} disabled>\n                <Spinner animation=\"grow\" variant=\"light\" size=\"sm\" style={{ marginRight: \"3%\" }} />\n                Location: (x={Math.round(props.x)}, y={Math.round(props.y)}, theta={Math.round(props.theta)}, zone={props.zone})\n            </Button>\n            <Button variant=\"dark mt-2\" style={{ fontSize: \"1rem\", width: \"100%\" }} disabled>Last updated at {props.lastFetched === null ? \"\" : props.lastFetched}</Button>\n        </div>\n    </div>\n};\n\nexport default Location;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport RobotDisplay from './components/RobotDisplay';\nimport Activity from './components/Activity';\nimport {Tab, Tabs, Modal, Button} from 'react-bootstrap';\nimport { GamePlayer } from './App';\nimport LocationComponent from './components/LocationComponent';\n\ninterface MainDisplayState {\n  mode: Mode,\n  key: string\n  showModal: boolean\n  startedQuiz: boolean\n}\n\ninterface MainDisplayProps {\n  player: GamePlayer\n  partner: GamePlayer\n}\n\nenum Mode {\n  Test,\n  Explore,\n}\n\nfunction getQuery(query : string) {\n  let result = new URLSearchParams(window.location.search).get(query);\n  if (result === null) {\n    throw new Error(`Query parameter ${query} not provided`);\n  }\n  return result;\n}\n\nclass MainDisplay extends React.Component<MainDisplayProps, MainDisplayState> {\n\n  constructor(props: MainDisplayProps) {\n    super(props);\n    this.state = {\n      mode: Mode.Explore,\n      key: \"explore\",\n      showModal: false,\n      startedQuiz: false\n    };\n  }\n\n  changeMode(mode: Mode) {\n    this.setState({\n      mode: mode\n    });\n  }\n\n  setKey(key: string | null) {\n    let desiredKey = key;\n    let showModal = key === \"quiz\" ? true : false;\n    this.setState({\n      key: desiredKey === null ? \"explore\" : desiredKey,\n      showModal: showModal\n    });\n  }\n\n  startQuiz = () => {\n    this.setState({\n      showModal: false,\n      startedQuiz: true\n    });\n  }\n\n  keepExploring = () => {\n    this.setState({\n      key: \"explore\",\n      showModal: false\n    });\n  }\n\n  render() {\n    let key = this.state.key;\n    let showModal = this.state.showModal;\n    let startedQuiz = this.state.startedQuiz;\n    console.log(\"ActiveKey:\");\n    console.log(key);\n    return (\n      <div className=\"App\">\n          <h2 style={{paddingTop: \"30px\", color: \"#b9b9b9\", fontFamily: \"helvetica\"}}>\n            Haptic Cellulo\n          </h2>\n          <div className=\"container\" style={{padding: \"20px\", borderRadius: \"10px\", width: \"50%\"}}>\n            <Tabs activeKey={key}  \n            onSelect={(k) => this.setKey(k)}\n            style={{marginBottom: \"20px\", fontSize: \"1rem\"}}>\n                <Tab eventKey=\"explore\" \n                  title=\"Explore Cell Map\" \n                  disabled={startedQuiz ? true : false}>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <LocationComponent player={this.props.player} partner={this.props.partner}/>\n                    </div>\n                  </div>\n                </Tab>\n                <Tab \n                eventKey=\"quiz\" \n                  title=\"Start Quiz\"\n                  disabled={startedQuiz ? true : false}\n                  >\n                  <Activity player={this.props.player} partner={this.props.partner}></Activity>\n                </Tab>\n              </Tabs>\n              <Modal \n                show={showModal}\n                backdrop=\"static\"\n                keyboard={false}>\n              <Modal.Header \n                closeButton>\n                <Modal.Title>Quiz</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                Are you ready to start the quiz? Once you begin, you cannot return\n                to the learning activity.\n              </Modal.Body>\n              <Modal.Footer>\n                <Button \n                  variant=\"secondary\" \n                  onClick={this.keepExploring}>\n                  Keep exploring\n                </Button>\n                <Button \n                  variant=\"primary\" \n                  onClick={this.startQuiz}>\n                    Yes, start the quiz\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n      </div>\n    );\n  }\n\n  renderContent() {\n    return  \n  }\n}\n\nexport default MainDisplay;\n","export default __webpack_public_path__ + \"static/media/nucleus.ddd8d8e8.mp4\";","export default __webpack_public_path__ + \"static/media/mitochondrion.e87f2a95.mp4\";","export default __webpack_public_path__ + \"static/media/golgi_body.48b36d1d.mp4\";","export default __webpack_public_path__ + \"static/media/lysosome.6aab8551.mp4\";","export default __webpack_public_path__ + \"static/media/cytosol.5d6e8b37.mp4\";","import React from 'react';\nimport {Alert, Spinner, Badge} from 'react-bootstrap';\nimport Span from 'react-bootstrap';\nimport Location from './UI/Location';\nimport nucleusGraphic from '../assets/nucleus.mp4';\nimport mitochondrionGraphic from '../assets/mitochondrion.mp4';\nimport golgiBodyGraphic from '../assets/golgi_body.mp4';\nimport lysosomeGraphic from '../assets/lysosome.mp4';\nimport undefinedGraphic from '../assets/cytosol.mp4';\nimport Captions from '../assets/captions.json';\nimport {GamePlayer} from '../App';\n\ninterface OrganelleData {\n  graphic: string\n}\n\ninterface OrganelleStore {\n  [index: string]: OrganelleData;\n}\n\nlet organelles = {\n  \"nucleus\" : {graphic: nucleusGraphic},\n  \"mitochondrion\": {graphic: mitochondrionGraphic},\n  \"golgiBody\": {graphic: golgiBodyGraphic},\n  \"lysosome\": {graphic: lysosomeGraphic},\n  \"undefined\": {graphic: undefinedGraphic},\n  \"cytosol\": {graphic: undefinedGraphic}\n} as OrganelleStore;\n\ninterface LocationComponentState {\n}\n\ninterface LocationComponentProps {\n  player: GamePlayer\n  partner: GamePlayer\n}\n\nclass LocationComponent extends React.Component<LocationComponentProps, LocationComponentState> {\n\n    constructor(props: any) {\n      super(props);\n      this.state = {};\n    }\n\n    render() {\n      return <div>\n        <Location \n            src={organelles[this.props.player.zone].graphic} \n            lastFetched={this.props.player.lastFetched}\n            name={this.props.player.name}\n            x={this.props.player.x}\n            y={this.props.player.y}\n            theta={this.props.player.theta}\n            zone={this.props.player.zone === \"undefined\" ? \"cytosol\" : this.props.player.zone}>\n        </Location>\n      </div>;\n    }\n  }\nexport default LocationComponent;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport RobotDisplay from './components/RobotDisplay';\nimport Activity from './components/Activity';\nimport {Tab, Tabs, Modal, Button} from 'react-bootstrap';\nimport MainDisplay from './MainDisplay';\n\nexport interface GamePlayer {\n  name: string\n  zone: string\n  x: number\n  y: number\n  theta: number\n  lastFetched: string\n}\n\ninterface State {\n  player: GamePlayer\n  partner: GamePlayer\n}\n\ninterface Props {\n}\n\nfunction getQuery(query : string) {\n  let result = new URLSearchParams(window.location.search).get(query);\n  if (result === null) {\n    throw new Error(`Query parameter ${query} not provided`);\n  }\n  return result;\n}\n\nclass App extends React.Component<Props,State> {\n\n  intervalId: any = 0;\n  constructor(props: Props) {\n    super(props);\n    let player = {\n      name: getQuery('player'),\n      zone: \"undefined\",\n      x: 0,\n      y: 0,\n      theta: 0,\n      lastFetched: \"Not fetched\"\n    } as GamePlayer;\n    let partner = {\n      name: getQuery('partner'),\n      zone: \"undefined\",\n      x: 0,\n      y: 0,\n      theta: 0,\n      lastFetched: \"Not fetched\"\n    } as GamePlayer;\n    this.state = {\n      player: player,\n      partner: partner\n    };\n  }\n\n  fetchGamePlayer = (name: string) => {\n    return fetch(`https://cellulo-live.herokuapp.com/pose?name=${name}`)\n    .then(res => res.json())\n    .then(\n    (res) => {\n        if (res.type === 'success') {\n            let pose = res.content;\n            var date = new Date();\n            let result = {\n              name: name,\n              zone: pose.zone,\n              x: pose.x,\n              y: pose.y,\n              theta: pose.theta,\n              lastFetched: date.toLocaleTimeString('en-US'),\n            } as GamePlayer;\n            return result;\n        } else {\n            console.log(\"Non-success:\" + JSON.stringify(res));\n        }\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    (error) => { throw new Error(error) });\n  }\n\n  fetchPose = () => {\n    console.log(this.state);\n    let playerName = this.state.player.name;\n    this.fetchGamePlayer(playerName)\n    .then((gamePlayer: GamePlayer | undefined) => {\n      if (gamePlayer !== undefined) {\n        this.setState({\n          player: gamePlayer\n        });\n      }\n    });\n    let partnerName = this.state.partner.name;\n    this.fetchGamePlayer(partnerName)\n    .then((gamePlayer: GamePlayer | undefined) => {\n      if (gamePlayer !== undefined) {\n        this.setState({\n          partner: gamePlayer\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n      this.intervalId = setInterval(this.fetchPose.bind(this), 500);\n      this.fetchPose();\n  }\n\n\n  render() {\n    console.log(\"This state\");\n    console.log(this.state);\n    let {player, partner} = this.state;\n    return (\n      <MainDisplay player={player} partner={partner}></MainDisplay>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}